diff -Nur raknet-2.4.7/Makefile raknet-2.4.7_2/Makefile
--- raknet-2.4.7/Makefile	2005-11-18 20:27:50.000000000 +0100
+++ raknet-2.4.7_2/Makefile	2006-04-01 11:45:24.000000000 +0200
@@ -1,6 +1,6 @@
 include makefile.defs
 
-all: static shared voicestatic voiceshared
+all: static shared
 
 static:
 	make -C Source "BASE_DIR=$(PWD)" static
diff -Nur raknet-2.4.7/makefile.defs raknet-2.4.7_2/makefile.defs
--- raknet-2.4.7/makefile.defs	2006-02-25 12:59:04.000000000 +0100
+++ raknet-2.4.7_2/makefile.defs	2006-04-01 11:46:16.000000000 +0200
@@ -6,16 +6,16 @@
 #please read the part abaut speex in LINUX_README if you get problems with speex
 SPEEX_VERSION = 1.1.11.1
 
-INCLUDE = $(BASE_DIR)/speex-$(SPEEX_VERSION)/include/ -I$(BASE_DIR)/Include -I$(BASE_DIR)/Include/RakVoice
+INCLUDE = $(BASE_DIR)/Include
 
 #uncoment the second 'DEBUG' to enable debuging.
-#DEBUG =
-DEBUG = -ggdb
+DEBUG =
+#DEBUG = -ggdb
 
 SPEEX_DIR = $(BASE_DIR)/speex-$(SPEEX_VERSION)/libspeex/
 
-VERSION = 2.4.5.2
+VERSION = 2.4.8.7
 
-LIBS_DIR = /usr/local/lib
+LIBS_DIR = /usr/lib
 
-INCLUDE_DIR = /usr/local/include
+INCLUDE_DIR = /usr/include
diff -Nur raknet-2.4.7/Source/ReliabilityLayer.cpp raknet-2.4.7_2/Source/ReliabilityLayer.cpp
--- raknet-2.4.7/Source/ReliabilityLayer.cpp	2006-05-16 14:49:24.000000000 +0200
+++ raknet-2.4.7_2/Source/ReliabilityLayer.cpp	2006-05-05 23:57:22.000000000 +0200
@@ -2205,7 +2205,7 @@
 	bitStreamSucceeded = bitStream->ReadAlignedBytes( ( unsigned char* ) internalPacket->data, BITS_TO_BYTES( internalPacket->dataBitLength ) );
 
 	//bitStreamSucceeded = bitStream->ReadBits((unsigned char*)internalPacket->data, internalPacket->dataBitLength);
-#ifdef _DEBUG
+//#ifdef _DEBUG
 
 	// 10/08/05 - Disabled assert since this hits from offline packets
 	//assert( bitStreamSucceeded );
@@ -2217,7 +2217,7 @@
 		return 0;
 	}
 
-#endif
+//#endif
 
 	// PRINTING UNRELIABLE STRINGS
 	// if (internalPacket->data && internalPacket->dataBitLength>5*8)
diff -Nur raknet/raknet-2.4.8.7/Source/NetworkTypes.cpp raknet_2/raknet-2.4.8.7/Source/NetworkTypes.cpp
--- raknet-2.4.8.7/Source/NetworkTypes.cpp	2006-05-01 21:16:46.000000000 +0200
+++ raknet-2.4.8.7_2/Source/NetworkTypes.cpp	2006-05-21 09:58:59.000000000 +0200
@@ -81,16 +81,6 @@
 // All systems must use the same value for this variable.
 bool RAK_DLL_EXPORT NetworkID::peerToPeerMode=false;
 
-bool PlayerID::operator==( const PlayerID& right ) const
-{
-	return binaryAddress == right.binaryAddress && port == right.port;
-}
-
-bool PlayerID::operator!=( const PlayerID& right ) const
-{
-	return binaryAddress != right.binaryAddress || port != right.port;
-}
-
 bool PlayerID::operator>( const PlayerID& right ) const
 {
 	return ( ( binaryAddress > right.binaryAddress ) || ( ( binaryAddress == right.binaryAddress ) && ( port > right.port ) ) );
diff -Nur raknet-2.4.8.7/Include/NetworkTypes.h raknet-2.4.8.7_2/Include/NetworkTypes.h
--- raknet-2.4.8.7/Include/NetworkTypes.h	2006-05-03 20:03:28.000000000 +0200
+++ raknet-2.4.8.7_2/Include/NetworkTypes.h	2006-05-21 09:59:21.000000000 +0200
@@ -71,6 +71,17 @@
 	bool operator < ( const PlayerID& right ) const;
 };
 
+inline bool PlayerID::operator==( const PlayerID& right ) const
+{
+	return binaryAddress == right.binaryAddress && port == right.port;
+}
+
+inline bool PlayerID::operator!=( const PlayerID& right ) const
+{
+	return binaryAddress != right.binaryAddress || port != right.port;
+}
+
+
 struct RAK_DLL_EXPORT NetworkID
 {
 	// Set this to true to use peer to peer mode for NetworkIDs.
