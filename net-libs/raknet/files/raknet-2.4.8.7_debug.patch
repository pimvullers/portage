diff -Nur raknet-2.4.7/Makefile raknet-2.4.7_2/Makefile
--- raknet-2.4.7/Makefile	2005-11-18 20:27:50.000000000 +0100
+++ raknet-2.4.7_2/Makefile	2006-04-01 11:45:24.000000000 +0200
@@ -1,6 +1,6 @@
 include makefile.defs
 
-all: static shared voicestatic voiceshared
+all: static shared
 
 static:
 	make -C Source "BASE_DIR=$(PWD)" static
diff -Nur raknet-2.4.7/makefile.defs raknet-2.4.7_2/makefile.defs
--- raknet-2.4.7/makefile.defs	2006-02-25 12:59:04.000000000 +0100
+++ raknet-2.4.7_2/makefile.defs	2006-04-01 11:46:16.000000000 +0200
@@ -6,16 +6,16 @@
 #please read the part abaut speex in LINUX_README if you get problems with speex
 SPEEX_VERSION = 1.1.11.1
 
-INCLUDE = $(BASE_DIR)/speex-$(SPEEX_VERSION)/include/ -I$(BASE_DIR)/Include -I$(BASE_DIR)/Include/RakVoice
+INCLUDE = $(BASE_DIR)/Include
 
 #uncoment the second 'DEBUG' to enable debuging.
-#DEBUG =
-DEBUG = -ggdb
+#DEBUG =
+DEBUG = -ggdb -D_DEBUG -D_DO_PRINTF
 
 SPEEX_DIR = $(BASE_DIR)/speex-$(SPEEX_VERSION)/libspeex/
 
-VERSION = 2.4.5.2
+VERSION = 2.4.8.7
 
-LIBS_DIR = /usr/local/lib
+LIBS_DIR = /usr/lib
 
-INCLUDE_DIR = /usr/local/include
+INCLUDE_DIR = /usr/include
diff -Nur raknet-2.4.7/Source/SimpleTCPServer.cpp raknet-2.4.7_2/Source/SimpleTCPServer.cpp
--- raknet-2.4.7/Source/SimpleTCPServer.cpp	2006-05-05 11:46:44.000000000 +0200
+++ raknet-2.4.7_2/Source/SimpleTCPServer.cpp	2006-05-14 16:16:31.000000000 +0200
@@ -43,6 +43,7 @@
 #endif
 
 #ifdef _DO_PRINTF
+#include <stdio.h>
 #endif
 
 
@@ -361,10 +362,10 @@
 			else if (FD_ISSET(sts->listenSocket, &exceptionFD))
 			{
 #ifdef _DO_PRINTF
-				int err;
-				int errlen = sizeof(err);
-				getsockopt(sts->listenSocket, SOL_SOCKET, SO_ERROR,(char*)&err, &errlen);
-				printf("Socket error %s on listening socket\n", err);
+				//int err;
+				//int errlen = sizeof(err);
+				//getsockopt(sts->listenSocket, SOL_SOCKET, SO_ERROR,(char*)&err, &errlen);
+				//printf("Socket error %s on listening socket\n", err);
 #endif
 			}
 			else
@@ -375,12 +376,12 @@
 					if (FD_ISSET(sts->remoteClients[i]->socket, &exceptionFD))
 					{
 #ifdef _DO_PRINTF
-						int err;
-						int errlen = sizeof(err);
-						getsockopt(sts->listenSocket, SOL_SOCKET, SO_ERROR,(char*)&err, &errlen);
-						in_addr in;
-						in.s_addr = sts->remoteClients[i]->playerId.binaryAddress;
-						printf("Socket error %i on %s:%i\n", err,inet_ntoa( in ), sts->remoteClients[i]->playerId.port );
+						//int err;
+						//int errlen = sizeof(err);
+						//getsockopt(sts->listenSocket, SOL_SOCKET, SO_ERROR,(char*)&err, &errlen);
+						//in_addr in;
+						//in.s_addr = sts->remoteClients[i]->playerId.binaryAddress;
+						//printf("Socket error %i on %s:%i\n", err,inet_ntoa( in ), sts->remoteClients[i]->playerId.port );
 #endif
 						// Connection lost abruptly
 						playerId=sts->lostConnections.WriteLock();
diff -Nur raknet-2.4.8.7/Include/DS_Queue.h raknet-2.4.8.7_2/Include/DS_Queue.h
--- raknet-2.4.8.7/Include/DS_Queue.h	2006-05-03 21:28:34.000000000 +0200
+++ raknet-2.4.8.7_2/Include/DS_Queue.h	2006-05-21 10:00:01.000000000 +0200
@@ -91,7 +91,7 @@
 		inline queue_type Queue<queue_type>::Pop( void )
 	{
 #ifdef _DEBUG
-		assert( allocation_size > 0 && Size() >= 0 && head != tail);
+		assert( allocation_size > 0 && head != tail);
 #endif
 		//head=(head+1) % allocation_size;
 
diff -Nur raknet/raknet-2.4.8.7/Source/NetworkTypes.cpp raknet_2/raknet-2.4.8.7/Source/NetworkTypes.cpp
--- raknet-2.4.8.7/Source/NetworkTypes.cpp	2006-05-01 21:16:46.000000000 +0200
+++ raknet-2.4.8.7_2/Source/NetworkTypes.cpp	2006-05-21 09:58:59.000000000 +0200
@@ -81,16 +81,6 @@
 // All systems must use the same value for this variable.
 bool RAK_DLL_EXPORT NetworkID::peerToPeerMode=false;
 
-bool PlayerID::operator==( const PlayerID& right ) const
-{
-	return binaryAddress == right.binaryAddress && port == right.port;
-}
-
-bool PlayerID::operator!=( const PlayerID& right ) const
-{
-	return binaryAddress != right.binaryAddress || port != right.port;
-}
-
 bool PlayerID::operator>( const PlayerID& right ) const
 {
 	return ( ( binaryAddress > right.binaryAddress ) || ( ( binaryAddress == right.binaryAddress ) && ( port > right.port ) ) );
diff -Nur raknet-2.4.8.7/Include/NetworkTypes.h raknet-2.4.8.7_2/Include/NetworkTypes.h
--- raknet-2.4.8.7/Include/NetworkTypes.h	2006-05-03 20:03:28.000000000 +0200
+++ raknet-2.4.8.7_2/Include/NetworkTypes.h	2006-05-21 09:59:21.000000000 +0200
@@ -71,6 +71,17 @@
 	bool operator < ( const PlayerID& right ) const;
 };
 
+inline bool PlayerID::operator==( const PlayerID& right ) const
+{
+	return binaryAddress == right.binaryAddress && port == right.port;
+}
+
+inline bool PlayerID::operator!=( const PlayerID& right ) const
+{
+	return binaryAddress != right.binaryAddress || port != right.port;
+}
+
+
 struct RAK_DLL_EXPORT NetworkID
 {
 	// Set this to true to use peer to peer mode for NetworkIDs.
